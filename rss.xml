<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[AAssaly Photography]]></title>
        <description><![CDATA[AAssaly Photography]]></description>
        <link>http://github.com/dylang/node-rss</link>
        <generator>The Grid</generator>
        <lastBuildDate>Sat, 05 Mar 2016 16:22:47 GMT</lastBuildDate>
        <atom:link href="undefinedrss.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[Is there a right way to make complicated applications usable?]]></title>
            <description><![CDATA[<article><h1>Is there a right way to make complicated applications usable?</h1><p>There are many professional-grade applications which possess very complicated expert-level capabilities. Examples which most people have heard of are typically in the creative arts field such as Adobe's entire suite on their Creative Cloud. These programs are used by professionals every day to complete extremely complex tasks such as creating visual effects for movies or encoding video. However, the average person, myself included, only ever use a small portion of the tools available to them when using expert applications such as these. So what is it exactly that makes some complicated programs more user friendly than others?</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/14074d84decb724a8b246734d6f11a266daaba08.png"></article>]]></description>
            <link>undefinedis-there-a-right-way-to-make-complicated-applications-usable/index.html</link>
            <guid isPermaLink="false">936bc6c0-e3ed-43bb-82f7-143e23504583</guid>
            <pubDate>Sat, 05 Mar 2016 16:22:37 GMT</pubDate>
        </item>
    </channel>
</rss>